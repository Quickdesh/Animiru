name: Release Builder
on:
  push:
    branches:
      - release
    tags:
      - v*

jobs:
  build:
    name: Build app
    runs-on: ubuntu-latest

    steps:
      - name: Cancel previous runs
        uses: styfle/cancel-workflow-action@0.9.1
        with:
          access_token: ${{ github.token }}
          all_but_latest: true

      - name: Clone repo
        uses: actions/checkout@v2

      - name: Validate Gradle Wrapper
        uses: gradle/wrapper-validation-action@v1

      - name: Set up JDK 11
        uses: actions/setup-java@v1
        with:
          java-version: 11

      - name: Copy CI gradle.properties
        run: |
          mkdir -p ~/.gradle
          cp .github/runner-files/ci-gradle.properties ~/.gradle/gradle.properties

      - name: Build app
        uses: gradle/gradle-command-action@v2
        with:
          arguments: assembleStandardRelease

      # Sign APK and create release for tags

      - name: Get tag name

        if: startsWith(github.ref, 'refs/tags/') && github.repository == 'Quickdesh/Animiru'
        run: |
          set -x
          echo "VERSION_TAG=${GITHUB_REF/refs\/tags\//}" >> $GITHUB_ENV

      - name: Sign APK
        if: startsWith(github.ref, 'refs/tags/') && github.repository == 'Quickdesh/Animiru'
        uses: r0adkll/sign-android-release@v1
        with:
          releaseDirectory: app/build/outputs/apk/standard/release
          signingKeyBase64: ${{ secrets.SIGNING_KEY }}
          alias: ${{ secrets.ALIAS }}
          keyStorePassword: ${{ secrets.KEY_STORE_PASSWORD }}
          keyPassword: ${{ secrets.KEY_PASSWORD }}

      - name: Clean up build artifacts
        if: startsWith(github.ref, 'refs/tags/') && github.repository == 'Quickdesh/Animiru'
        run: |
          set -e

          mv app/build/outputs/apk/standard/release/app-standard-universal-release-unsigned-signed.apk Animiru-universal-${{ env.VERSION_TAG }}.apk
          sha=`sha256sum Animiru-${{ env.VERSION_TAG }}.apk | awk '{ print $1 }'`
          echo "APK_UNIVERSAL_SHA=$sha" >> $GITHUB_ENV

          cp app/build/outputs/apk/standard/release/app-standard-arm64-v8a-release-unsigned-signed.apk Animiru-arm64-v8a-${{ env.VERSION_TAG }}.apk
          sha=`sha256sum Animiru-arm64-v8a-${{ env.VERSION_TAG }}.apk | awk '{ print $1 }'`
          echo "APK_ARM64_V8A_SHA=$sha" >> $GITHUB_ENV

          cp app/build/outputs/apk/standard/release/app-standard-armeabi-v7a-release-unsigned-signed.apk Animiru-armeabi-v7a-${{ env.VERSION_TAG }}.apk
          sha=`sha256sum Animiru-armeabi-v7a-${{ env.VERSION_TAG }}.apk | awk '{ print $1 }'`
          echo "APK_ARMEABI_V7A_SHA=$sha" >> $GITHUB_ENV

          cp app/build/outputs/apk/standard/release/app-standard-x86-release-unsigned-signed.apk Animiru-x86-${{ env.VERSION_TAG }}.apk
          sha=`sha256sum Animiru-x86-${{ env.VERSION_TAG }}.apk | awk '{ print $1 }'`
          echo "APK_X86_SHA=$sha" >> $GITHUB_ENV

          cp app/build/outputs/apk/standard/release/app-standard-x86_64-release-unsigned-signed.apk Animiru-x86_64-${{ env.VERSION_TAG }}.apk
          sha=`sha256sum Animiru-x86_64-${{ env.VERSION_TAG }}.apk | awk '{ print $1 }'`
          echo "APK_X86_64_SHA=$sha" >> $GITHUB_ENV

      - name: Create Release
        if: startsWith(github.ref, 'refs/tags/') && github.repository == 'Quickdesh/Animiru'
        uses: softprops/action-gh-release@v1
        with:
          tag_name: ${{ env.VERSION_TAG }}
          name: Animiru ${{ env.VERSION_TAG }}
          body: |
            ### Changes

            -


            ---

            ### Checksums

            | Variant | SHA-256 |
            | ------- | ------- |
            | Universal | ${{ env.APK_UNIVERSAL_SHA }} |
            | arm64-v8a | ${{ env.APK_ARM64_V8A_SHA }}
            | armeabi-v7a | ${{ env.APK_ARMEABI_V7A_SHA }}
            | x86 | ${{ env.APK_X86_SHA }} |
            | x86_64 | ${{ env.APK_X86_64_SHA }} |

            To find out the best version for you:-

            https://play.google.com/store/apps/details?id=ru.andr7e.deviceinfohw

            Download the app from the link above ^

            Open app ---> SOC tab ---> ABI/Supported ABI

            Install based on the values given in the above fields ^

            Universal will work regardless of the ABI!




          files: |
            Animiru-universal-${{ env.VERSION_TAG }}.apk
            Animiru-arm64-v8a-${{ env.VERSION_TAG }}.apk
            Animiru-armeabi-v7a-${{ env.VERSION_TAG }}.apk
            Animiru-x86-${{ env.VERSION_TAG }}.apk
            Animiru-x86_64-${{ env.VERSION_TAG }}.apk
          draft: true
          prerelease: false
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
