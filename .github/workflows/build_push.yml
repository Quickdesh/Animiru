name: CI

permissions:
  contents: write

on:
  push:
    branches:
      - release
    tags:
      - v*

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

jobs:
  build:
    name: Build app
    runs-on: ubuntu-latest

    steps:
      - name: Clone repo
        uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4.2.2

      - name: Validate Gradle Wrapper
        uses: gradle/actions/wrapper-validation@d156388eb19639ec20ade50009f3d199ce1e2808 # v4.1.0

      - name: Set up JDK
        uses: actions/setup-java@8df1039502a15bceb9433410b1a100fbe190c53b # v4.5.0
        with:
          java-version: 17
          distribution: adopt

      # AM (SYNC_DRIVE) -->
      - name: Write client_secrets.json
        uses: DamianReeves/write-file-action@v1.2
        with:
            path: app/src/main/assets/client_secrets.json
            contents: ${{ secrets.CLIENT_SECRETS_TEXT }}
            write-mode: overwrite
      # <-- AM (SYNC_DRIVE)

      - name: Set up gradle
        uses: gradle/actions/setup-gradle@d156388eb19639ec20ade50009f3d199ce1e2808 # v4.1.0

      - name: Build app and run unit tests
        run: ./gradlew spotlessCheck assembleStandardRelease testReleaseUnitTest testStandardReleaseUnitTest

      - name: Upload APK
        uses: actions/upload-artifact@b4b15b8c7c6ac21ea08fcf65892d2ee8f75cf882 # v4.4.3
        with:
          name: arm64-v8a-${{ github.sha }}
          path: app/build/outputs/apk/standard/release/app-standard-arm64-v8a-release-unsigned.apk

      - name: Upload mapping
        uses: actions/upload-artifact@b4b15b8c7c6ac21ea08fcf65892d2ee8f75cf882 # v4.4.3
        with:
          name: mapping-${{ github.sha }}
          path: app/build/outputs/mapping/standardRelease

      # Sign APK and create release for tags

      - name: Get tag name

        if: startsWith(github.ref, 'refs/tags/') && github.repository == 'Quickdesh/Animiru'
        run: |
          set -x
          echo "VERSION_TAG=${GITHUB_REF/refs\/tags\//}" >> $GITHUB_ENV

      - name: Sign APK
        if: startsWith(github.ref, 'refs/tags/') && github.repository == 'Quickdesh/Animiru'
        uses: r0adkll/sign-android-release@349ebdef58775b1e0d8099458af0816dc79b6407 # v1
        with:
          releaseDirectory: app/build/outputs/apk/standard/release
          signingKeyBase64: ${{ secrets.SIGNING_KEY }}
          alias: ${{ secrets.ALIAS }}
          keyStorePassword: ${{ secrets.KEY_STORE_PASSWORD }}
          keyPassword: ${{ secrets.KEY_PASSWORD }}
        env:
          BUILD_TOOLS_VERSION: "34.0.0"

      - name: Clean up build artifacts
        if: startsWith(github.ref, 'refs/tags/') && github.repository == 'Quickdesh/Animiru'
        run: |
          set -e

          mv app/build/outputs/apk/standard/release/app-standard-universal-release-unsigned-signed.apk Animiru-universal-${{ env.VERSION_TAG }}.apk
          sha=`sha256sum Animiru-universal-${{ env.VERSION_TAG }}.apk | awk '{ print $1 }'`
          echo "APK_UNIVERSAL_SHA=$sha" >> $GITHUB_ENV

          cp app/build/outputs/apk/standard/release/app-standard-arm64-v8a-release-unsigned-signed.apk Animiru-arm64-v8a-${{ env.VERSION_TAG }}.apk
          sha=`sha256sum Animiru-arm64-v8a-${{ env.VERSION_TAG }}.apk | awk '{ print $1 }'`
          echo "APK_ARM64_V8A_SHA=$sha" >> $GITHUB_ENV

          cp app/build/outputs/apk/standard/release/app-standard-armeabi-v7a-release-unsigned-signed.apk Animiru-armeabi-v7a-${{ env.VERSION_TAG }}.apk
          sha=`sha256sum Animiru-armeabi-v7a-${{ env.VERSION_TAG }}.apk | awk '{ print $1 }'`
          echo "APK_ARMEABI_V7A_SHA=$sha" >> $GITHUB_ENV

          cp app/build/outputs/apk/standard/release/app-standard-x86-release-unsigned-signed.apk Animiru-x86-${{ env.VERSION_TAG }}.apk
          sha=`sha256sum Animiru-x86-${{ env.VERSION_TAG }}.apk | awk '{ print $1 }'`
          echo "APK_X86_SHA=$sha" >> $GITHUB_ENV

          cp app/build/outputs/apk/standard/release/app-standard-x86_64-release-unsigned-signed.apk Animiru-x86_64-${{ env.VERSION_TAG }}.apk
          sha=`sha256sum Animiru-x86_64-${{ env.VERSION_TAG }}.apk | awk '{ print $1 }'`
          echo "APK_X86_64_SHA=$sha" >> $GITHUB_ENV

      - name: Create Release
        if: startsWith(github.ref, 'refs/tags/') && github.repository == 'Quickdesh/Animiru'
        uses: softprops/action-gh-release@c062e08bd532815e2082a85e87e3ef29c3e6d191 # v2.0.8
        with:
          tag_name: ${{ env.VERSION_TAG }}
          name: Animiru ${{ env.VERSION_TAG }}
          body: |
            ### Changes
            
            - 
            
            ---

            ### Checksums

            | Variant | SHA-256 |
            | ------- | ------- |
            | arm64-v8a | ${{ env.APK_ARM64_V8A_SHA }} |
            | armeabi-v7a | ${{ env.APK_ARMEABI_V7A_SHA }} |
            | universal | ${{ env.APK_UNIVERSAL_SHA }} |
            | x86 | ${{ env.APK_X86_SHA }} |
            | x86_64 | ${{ env.APK_X86_64_SHA }} |
            
            To find out the best version for you:-

            https://play.google.com/store/apps/details?id=ru.andr7e.deviceinfohw

            Download the app from the link above ^

            Open app ---> SOC tab ---> ABI/Supported ABI

            Install based on the values given in the above variant fields

            Universal will work regardless of the ABI

          files: |
            Animiru-universal-${{ env.VERSION_TAG }}.apk
            Animiru-arm64-v8a-${{ env.VERSION_TAG }}.apk
            Animiru-armeabi-v7a-${{ env.VERSION_TAG }}.apk
            Animiru-x86-${{ env.VERSION_TAG }}.apk
            Animiru-x86_64-${{ env.VERSION_TAG }}.apk
          draft: true
          prerelease: false
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
